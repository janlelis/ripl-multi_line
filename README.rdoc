== Description
This {ripl}[https://github.com/cldwalker/ripl] plugin allows you to evaluate multiple lines of Ruby code.

== Install
Install the gem with

  gem install ripl-multi_line

== Usage
Add the following line to your <tt>~/.riplrc</tt>

  require 'ripl/multi_line'

<b>Hint:</b> In multi-line situations, you can press <tt>ctrl+c</tt> and the last line will be removed.

== Options
You can customize your multi-line prompt with the <tt>:multi_line_prompt</tt> option. For example, put this into your <tt>~/.riplrc</tt>:

  Ripl.config[:multi_line_prompt] = ' > '

It also takes a proc as value.

Then there is the <tt>:multi_line_history</tt> option. The default value is <tt>:compact</tt> which tries to squeeze your last multi-line block into one line (works best in mri, in about 98% of all cases).

  >> def some_multi_line_block
  |    42
  |  end #=> nil
  # Press <UP>
  >> def some_multi_line_block; 42; end

Another value is <tt>:block</tt>, which joins the multi-line block with new-lines.

To leave the history untouched, set it to </tt>:plain</tt> or a false value.

== AutoIndent
Check out the {ripl-auto_indent}[https://github.com/janlelis/ripl-auto_indent] plugin to get ruby syntax indention.

== MultiLine detection
To use your own multi-line detection engine, read the source at <tt>lib/ripl/multi_line.rb</tt>, implement your version at <tt>lib/ripl/multi_line/your_correct_detection.rb</tt> in which you overwrite <tt>Shell#multiline?</tt> in a <tt>Ripl::MultiLine</tt> sub-module named <tt>YourCorrectDetection</tt> and set <tt>Ripl.config[:multi_line_engine]</tt> to <tt>:your_correct_detection</tt>. See <tt>lib/ripl/multi_line/ripper.rb</tt> for an example.

Currently available engines:
* :live_error (<b>default</b>) - Simply evaluate expression, if it throws a multi-line syntax error, fall back to multi-line input mode. Sounds scary, but works pretty well in practice.
* :ripper - Analyze input with Ripper (comes with 1.9, but there is also a 1.8 gem).
* :ripper_pure - Only check if ripper understands the expression.
* :ruby_parser - Use ruby_parser gem (1.8 only)

None of the above solutions is perfect, so... maybe it's time to roll your own ;)

== Credits
Contributions & influences by cldwalker and godfat.

J-_-L
